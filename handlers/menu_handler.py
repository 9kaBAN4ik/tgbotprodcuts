from aiogram import Router
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from config import ADMIN_ID
from database import get_random_aphorism, get_user_role, get_random_image, get_user_language,load_texts
router = Router()
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤
texts = load_texts('texts.xlsx')
@router.message(lambda message: message.text and message.text.strip() in {str(texts['back_to_main_menu_button'].get(lang, '') or '').strip() for lang in texts['back_to_main_menu_button']})
async def back_to_main_menu(message: Message, state: FSMContext):
    try:
        user_id = message.from_user.id
        user_language = await get_user_language(user_id)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        user_role = await get_user_role(user_id)
        user_state = await state.get_state()
        print(f'–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_state}')

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—Ñ–æ—Ä–∏–∑–º–∞
        aphorism = get_random_aphorism()
        aphorism_text = f"¬´{aphorism[0]}¬ª\n¬© {aphorism[1]}" if aphorism else "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_file_id = get_random_image()

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        menu_buttons = [
            [KeyboardButton(text=texts['products_button'][user_language]),
             KeyboardButton(text=texts['friends_button'][user_language])],
            [KeyboardButton(text=texts['balance_button'][user_language]),
             KeyboardButton(text=texts['partners_button'][user_language])],
            [KeyboardButton(text=texts['info_button'][user_language]),
             KeyboardButton(text=texts['personal_account'][user_language])],
            [KeyboardButton(text="üè†")]  # –ö–Ω–æ–ø–∫–∞ –î–æ–º–∏–∫
        ]

        if user_role == 'admin' or user_id == int(ADMIN_ID):
            menu_buttons.append([KeyboardButton(text=texts['admin_panel_button'][user_language])])

        menu_markup = ReplyKeyboardMarkup(keyboard=menu_buttons, resize_keyboard=True, one_time_keyboard=False)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ —Å –∞—Ñ–æ—Ä–∏–∑–º–æ–º
        if image_file_id:
            await message.answer_photo(photo=image_file_id, caption=aphorism_text, reply_markup=menu_markup)
        else:
            await message.answer(aphorism_text, reply_markup=menu_markup)

        # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
        await state.clear()

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–º–∏–∫ üè†"
@router.message(lambda message: message.text and message.text.strip() in {str(texts['home_button'].get(lang, '') or '').strip() for lang in texts['home_button']})
async def home_button_handler(message: Message):
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º "üè† –î–æ–º–∏–∫"
    await message.delete()

    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∞—Ñ–æ—Ä–∏–∑–º
    aphorism = get_random_aphorism()
    aphorism_text = f"¬´{aphorism[0]}¬ª\n¬© {aphorism[1]}" if aphorism else "–ê—Ñ–æ—Ä–∏–∑–º—ã –ø–æ–∫–∞ –Ω–µ –±—ã–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã."

    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    image_file_id = get_random_image()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ñ–æ—Ä–∏–∑–º–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–º
    if image_file_id:
        await message.answer_photo(
            photo=image_file_id,
            caption=aphorism_text
        )
    else:
        await message.answer(aphorism_text)
# dlya jazika
